[package]
authors = ["Databend Authors <opensource@datafuselabs.com>"]
categories = ["filesystem"]
description = "Open Data Access Layer that connect the whole world together."
edition = "2021"
homepage = "https://opendal.databend.rs/"
keywords = ["storage", "data", "s3", "fs", "azblob"]
license = "Apache-2.0"
name = "opendal"
repository = "https://github.com/datafuselabs/opendal"
version = "0.8.0"

[package.metadata.docs.rs]
all-features = true

[features]
compress = ["async-compression"]
retry = ["backon"]
services-hdfs = ["hdrs"]
testing = ["uuid"]

[lib]
bench = false

[[bench]]
harness = false
name = "ops"

[[bench]]
harness = false
name = "io"

[[example]]
name = "hdfs"
required-features = ["services-hdfs"]

[dependencies]
anyhow = "1.0.56"
async-compat = "0.2.1"
# Temp workaround, should come back to tagged version after https://github.com/Nemo157/async-compression/issues/150 resolved.
async-compression = { package = "async-compression-issue-150-workaround", version = "0.3.15-issue-150", features = [
  "futures-io",
  "all-algorithms",
], optional = true }
async-trait = "0.1.53"
backon = { version = "0.0.2", optional = true }
base64 = "0.13.0"
bytes = "1.1.0"
dotenv = { version = "0.15.0", optional = true }
futures = { version = "0.3.21", features = ["alloc"] }
hdrs = { version = "0.1.4", optional = true, features = ["futures-io"] }
http = "0.2.6"
hyper = { version = "0.14.18", features = ["full"] }
hyper-tls = "0.5.0"
log = "0.4.16"
md5 = "0.7.0"
metrics = "0.19.0"
minitrace = "0.4.0"
once_cell = "1.10.0"
parking_lot = "0.12.0"
pin-project = "1.0.10"
quick-xml = { version = "0.23.0", features = ["serialize"] }
reqsign = "0.1.0"
serde = { version = "1.0.136", features = ["derive"] }
thiserror = "1.0.30"
time = "0.3.9"
tokio = { version = "1.17.0", features = ["full"] }
uuid = { version = "1.0.0", optional = true, features = ["serde", "v4"] }
ipfs-api-backend-hyper = { version = "0.4", features = ["with-send-sync", "with-builder"] }
ipfs-api = "0.15"

[dev-dependencies]
anyhow = "1.0.56"
cfg-if = "1.0.0"
criterion = { version = "0.3.5", features = [
  "async",
  "async_tokio",
  "html_reports",
] }
dotenv = "0.15.0"
env_logger = "0.9.0"
itertools = "0.10.3"
num-traits = "0.2.14"
paste = "1.0.7"
rand = "0.8.5"
serde_json = "1.0.79"
sha2 = "0.10.2"
size = "0.1.2"
uuid = { version = "1.0.0", features = ["serde", "v4"] }
